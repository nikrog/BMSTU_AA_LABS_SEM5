Организация асинхронного взаимодействия потоков на примере моделирования конвейерной обработки данных

В отчёте описать алгоритмы трёх этапов обработки экземпляра данных (заявки), согласно варианту, и схемы алгоритмов, выполняемых потоками в составе конвейерной вычислительной системы.
Каждый поток выполняет соответствующую стадию обработки заявки (расчёта). Потоки передают друг другу данные через очереди.
Результат третьей стадии вычисления передаётся третьим потоком в пул обработанных заявок.

Когда выполнение всех заявок завершено, сформировать лог по заявкам в пуле. Для каждой заявки добавить в лог 6-7 описаний событий, произошедших с заявкой, с указанием времени наступления события.
Список событий в логе отсортировать и вывести на экран (либо в файл).

Описать необходимые примитивы синхронизации или обосновать отсутствие необходимости их использования.

Разрешено использовать нативные потоки (либо go-рутины, язык go). Запрещено использовать sleep.

Запрещена запись разными потоками в одну и ту же консоль или один и тот же файл.

В 4й главе отчёта привести пример log-файла, описать результаты замеров времени обработки N заявок конвейерной системой, а также последовательным алгоритмом обработки заявок.
Расчитать выигрыш по затрачиваемому на расчёт времени по итогам применения конвейерного принципа обработки данных.

За использование Erlang (Elixir) дополнительные поблажки от Юрия Владимировича.

Индивидуальное задание: Конвейер, матрицы
Этапы конвейера:
1) A * A;
2) Привести матрицу к верхнетреугольному виду;
3) def(A) (~N потоков);